[{"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\index.js":"1","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\App.js":"2","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Header.js":"3","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Navigator.js":"4","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Content.js":"5","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Login.js":"6","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Signup.js":"7","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\queries.js":"8","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\auth.js":"9","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\mutations.js":"10","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Add.js":"11"},{"size":197,"mtime":1678156555758,"results":"12","hashOfConfig":"13"},{"size":6258,"mtime":1678241454582,"results":"14","hashOfConfig":"13"},{"size":5063,"mtime":1678156555756,"results":"15","hashOfConfig":"13"},{"size":3210,"mtime":1678237958322,"results":"16","hashOfConfig":"13"},{"size":1697,"mtime":1678241454583,"results":"17","hashOfConfig":"13"},{"size":2534,"mtime":1678236852562,"results":"18","hashOfConfig":"13"},{"size":2648,"mtime":1678236852562,"results":"19","hashOfConfig":"13"},{"size":642,"mtime":1678236852563,"results":"20","hashOfConfig":"13"},{"size":1043,"mtime":1678156885363,"results":"21","hashOfConfig":"13"},{"size":1335,"mtime":1678236852563,"results":"22","hashOfConfig":"13"},{"size":1875,"mtime":1678244627027,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ggayiq",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\index.js",[],["52","53"],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\App.js",["54","55"],"import React, { useState } from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Navigator from './components/Navigator';\nimport Content from './components/Content';\nimport Header from './components/Header';\nimport { useMutation } from '@apollo/client';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Add from './components/Add';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/zeebigbadkitty/Operation-Wellness\">\n        Operation Wellness - A Reactstreet Boys Application \n      </Link>{' '}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nlet theme = createTheme({\n  palette: {\n    primary: {\n      light: '#FFE2F2ff',\n      main: '#FFE2F2ff',\n      dark: '#7E1E93ff',\n    },\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5,\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  components: {\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true,\n      },\n    },\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 48,\n    },\n  },\n});\n\ntheme = {\n  ...theme,\n  components: {\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          backgroundColor: '#642073ff',\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n        },\n        contained: {\n          boxShadow: 'none',\n          '&:active': {\n            boxShadow: 'none',\n          },\n        },\n      },\n    },\n    MuiTabs: {\n      styleOverrides: {\n        root: {\n          marginLeft: theme.spacing(1),\n        },\n        indicator: {\n          height: 3,\n          borderTopLeftRadius: 3,\n          borderTopRightRadius: 3,\n          backgroundColor: theme.palette.common.white,\n        },\n      },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          margin: '0 16px',\n          minWidth: 0,\n          padding: 0,\n          [theme.breakpoints.up('md')]: {\n            padding: 0,\n            minWidth: 0,\n          },\n        },\n      },\n    },\n    MuiIconButton: {\n      styleOverrides: {\n        root: {\n          padding: theme.spacing(1),\n        },\n      },\n    },\n    MuiTooltip: {\n      styleOverrides: {\n        tooltip: {\n          borderRadius: 4,\n        },\n      },\n    },\n    MuiDivider: {\n      styleOverrides: {\n        root: {\n          backgroundColor: 'rgb(255,255,255,0.15)',\n        },\n      },\n    },\n    MuiListItemButton: {\n      styleOverrides: {\n        root: {\n          '&.Mui-selected': {\n            color: '#FFE2F2ff',\n          },\n        },\n      },\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: 14,\n          fontWeight: theme.typography.fontWeightMedium,\n        },\n      },\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          color: 'inherit',\n          minWidth: 'auto',\n          marginRight: theme.spacing(2),\n          '& svg': {\n            fontSize: 20,\n          },\n        },\n      },\n    },\n    MuiAvatar: {\n      styleOverrides: {\n        root: {\n          width: 32,\n          height: 32,\n        },\n      },\n    },\n  },\n};\n\nconst drawerWidth = 256;\n\nexport default function Paperbase() {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const isSmUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    \n    <ApolloProvider client={client}>\n      <Router>\n    <ThemeProvider theme={theme}>\n      <Box sx={{ display: 'flex', minHeight: '100vh' }}>\n        <CssBaseline />\n        <Box\n          component=\"nav\"\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n        >\n          {isSmUp ? null : (\n            <Navigator\n              sx={{backgroundColor: '#642073ff',}}\n              PaperProps={{ style: { width: drawerWidth } }}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n            />\n          )}\n\n          <Navigator \n            PaperProps={{ style: { width: drawerWidth } }}\n            sx={{ display: { sm: 'block', xs: 'none' },  }}\n          />\n        </Box>\n        <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n          <Header onDrawerToggle={handleDrawerToggle} />\n          <Box component=\"main\" sx={{ flex: 1, py: 6, px: 4, bgcolor: '#F9E9FAff' }}>\n            <Routes>\n              <Route path=\"/\" element={<Content />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/add\" element={<Add />} />\n            </Routes>\n          </Box>\n          <Box component=\"footer\" sx={{ p: 2, bgcolor: '#FFE2F2ff',}}> \n            <Copyright />\n          </Box>\n        </Box>\n      </Box>\n    </ThemeProvider>\n    </Router>\n    </ApolloProvider>\n  );\n}","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Header.js",[],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Navigator.js",["56","57","58","59"],"import * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport HomeIcon from '@mui/icons-material/Home';\nimport PeopleIcon from '@mui/icons-material/People';\nimport DnsRoundedIcon from '@mui/icons-material/DnsRounded';\nimport PermMediaOutlinedIcon from '@mui/icons-material/PhotoSizeSelectActual';\nimport PublicIcon from '@mui/icons-material/Public';\nimport { ImageList, ImageListItem } from '@mui/material';\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\n// import SettingsEthernetIcon from '@mui/icons-material/SettingsEthernet';\n// import SettingsInputComponentIcon from '@mui/icons-material/SettingsInputComponent';\n// import TimerIcon from '@mui/icons-material/Timer';\n// import SettingsIcon from '@mui/icons-material/Settings';\n// import PhonelinkSetupIcon from '@mui/icons-material/PhonelinkSetup';\n\nconst categories = [\n  {\n    id: 'TaskBar',\n    children: [\n      {\n        id: 'Profile', icon: <PeopleIcon />,\n        active: true,\n      },\n      { id: 'Logout', icon: <LogoutIcon /> },\n    ],\n  },\n];\n\nconst item = {\n  py: '10px',\n  px: 3,\n  color: 'rgba(255, 255, 255, 0.7)',\n  '&:hover, &:focus': {\n    bgcolor: '#7E1E93ff',\n  },\n};\n\nconst itemCategory = {\n  boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\n  py: 1.5,\n  px: 3,\n}\n\nconst itemData = [\n  {\n    img: 'https://image.freepik.com/free-icon/wellness-logo_318-52473.jpg',\n    title: 'Wellness',\n  },\n];\nexport default function Navigator(props) {\n  const { ...other } = props;\n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n       \n      <Box>\n        <ImageList sx={{width: '25', heigh: '25'}} cols={1}>\n        {itemData.map((image, index) => (\n          <ImageListItem>\n             <img src={require('../assets/logo4.png').default} alt=\"Logo\" loading='lazy'/>\n          </ImageListItem>\n        ))}\n        </ImageList>\n      </Box>\n\n\n        <ListItem sx={{ ...item, ...itemCategory }}>\n          <ListItemIcon>\n            <MedicationLiquidIcon />\n          </ListItemIcon>\n          <ListItemText>Add Medication</ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <Box key={id} sx={{ bgcolor: ' #642073ff' }}>\n            <ListItem sx={{ py: 2, px: 3 }}>\n              <ListItemText sx={{ color: '#fff' }}>{id}</ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active }) => (\n              <ListItem disablePadding key={childId}>\n                <ListItemButton selected={active} sx={item}>\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText>{childId}</ListItemText>\n                </ListItemButton>\n              </ListItem>\n            ))}\n\n            <Divider sx={{ mt: 4 }} />\n          </Box>\n        ))}\n      </List>\n    </Drawer>\n  );\n}","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Content.js",["60","61","62","63","64","65","66","67"],"import * as React from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport axios from \"axios\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER_DRUGS, QUERY_SINGLE_DRUG } from \"../utils/queries\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\n//use query hook from Apollo to get data from the server\n\nconst columns = [\n  { field: \"proprietaryname\", headerName: \"Drug Name\", width: 450 },\n  { field: \"active_numerator_strength\", headerName: \"Strength\", width: 200 },\n  { field: \"active_ingred_unit\", headerName: \"Strength Unit\", width: 200 },\n];\n\nexport default function DataTable() {\n  const [rows, setRows] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [csv, setCsv] = React.useState({});\n\n  const { loading, data } = useQuery(QUERY_USER_DRUGS);\n  const userDrugs = data?.userDrugs || [];\n  console.log(userDrugs);\n\n  function handleDownloadCsv() {\n    const csvData = userDrugs.map((row) => ({\n      proprietaryname: row.proprietaryname,\n      active_numerator_strength: row.active_numerator_strength,\n      active_ingred_unit: row.active_ingred_unit,\n    }));\n    setCsv({\n      data: csvData,\n      fields: columns,\n    });\n  }\n  return (\n    <>\n    {loading ? (\n      <h1>Loading...</h1>\n    ) : (\n      <div style={{ height: 430, width: \"60%\" }}>\n        <DataGrid\n          columns={columns}\n          rows={userDrugs}\n          slots={{\n            toolbar: () => (\n              <GridToolbar>\n                <CSVLink {...csv} filename={\"data.csv\"}>\n                  Download me\n                </CSVLink>\n              </GridToolbar>\n            ),\n          }}\n        />\n      </div>\n    )}\n  </>\n);\n}\n","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Login.js",["68","69"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER, LOGIN_MUTATION, LOGOUT_MUTATION} from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Signup.js",[],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\queries.js",[],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\auth.js",["70"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\mutations.js",[],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Add.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":21},{"ruleId":"75","severity":1,"message":"80","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":16},{"ruleId":"75","severity":1,"message":"81","line":12,"column":8,"nodeType":"77","messageId":"78","endLine":12,"endColumn":22},{"ruleId":"75","severity":1,"message":"82","line":13,"column":8,"nodeType":"77","messageId":"78","endLine":13,"endColumn":29},{"ruleId":"75","severity":1,"message":"83","line":14,"column":8,"nodeType":"77","messageId":"78","endLine":14,"endColumn":18},{"ruleId":"75","severity":1,"message":"84","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":13},{"ruleId":"75","severity":1,"message":"85","line":5,"column":28,"nodeType":"77","messageId":"78","endLine":5,"endColumn":45},{"ruleId":"75","severity":1,"message":"86","line":6,"column":19,"nodeType":"77","messageId":"78","endLine":6,"endColumn":30},{"ruleId":"75","severity":1,"message":"87","line":17,"column":10,"nodeType":"77","messageId":"78","endLine":17,"endColumn":14},{"ruleId":"75","severity":1,"message":"88","line":17,"column":16,"nodeType":"77","messageId":"78","endLine":17,"endColumn":23},{"ruleId":"75","severity":1,"message":"89","line":18,"column":10,"nodeType":"77","messageId":"78","endLine":18,"endColumn":19},{"ruleId":"75","severity":1,"message":"90","line":18,"column":21,"nodeType":"77","messageId":"78","endLine":18,"endColumn":33},{"ruleId":"75","severity":1,"message":"91","line":25,"column":12,"nodeType":"77","messageId":"78","endLine":25,"endColumn":29},{"ruleId":"75","severity":1,"message":"92","line":4,"column":22,"nodeType":"77","messageId":"78","endLine":4,"endColumn":36},{"ruleId":"75","severity":1,"message":"93","line":4,"column":38,"nodeType":"77","messageId":"78","endLine":4,"endColumn":53},{"ruleId":"94","severity":1,"message":"95","line":41,"column":1,"nodeType":"96","endLine":41,"endColumn":34},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'HomeIcon' is defined but never used.","'DnsRoundedIcon' is defined but never used.","'PermMediaOutlinedIcon' is defined but never used.","'PublicIcon' is defined but never used.","'axios' is defined but never used.","'QUERY_SINGLE_DRUG' is defined but never used.","'CSVDownload' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'handleDownloadCsv' is defined but never used.","'LOGIN_MUTATION' is defined but never used.","'LOGOUT_MUTATION' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]