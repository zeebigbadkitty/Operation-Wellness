[{"C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\index.js":"1","C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\App.js":"2","C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\components\\Navigator.js":"3","C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\components\\Header.js":"4","C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\components\\Content.js":"5","C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\utils\\mutations.js":"6"},{"size":197,"mtime":1677555541943,"results":"7","hashOfConfig":"8"},{"size":5848,"mtime":1678071920323,"results":"9","hashOfConfig":"8"},{"size":3061,"mtime":1678069511710,"results":"10","hashOfConfig":"8"},{"size":5063,"mtime":1678069511710,"results":"11","hashOfConfig":"8"},{"size":2042,"mtime":1678069511709,"results":"12","hashOfConfig":"8"},{"size":855,"mtime":1678070174742,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"u37v0e",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\index.js",[],["29","30"],"C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\App.js",[],"C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\components\\Navigator.js",["31","32"],"import * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport HomeIcon from '@mui/icons-material/Home';\nimport PeopleIcon from '@mui/icons-material/People';\nimport DnsRoundedIcon from '@mui/icons-material/DnsRounded';\nimport PermMediaOutlinedIcon from '@mui/icons-material/PhotoSizeSelectActual';\nimport PublicIcon from '@mui/icons-material/Public';\nimport { ImageList, ImageListItem } from '@mui/material';\n\n// import SettingsEthernetIcon from '@mui/icons-material/SettingsEthernet';\n// import SettingsInputComponentIcon from '@mui/icons-material/SettingsInputComponent';\n// import TimerIcon from '@mui/icons-material/Timer';\n// import SettingsIcon from '@mui/icons-material/Settings';\n// import PhonelinkSetupIcon from '@mui/icons-material/PhonelinkSetup';\n\nconst categories = [\n  {\n    id: 'TaskBar',\n    children: [\n      {\n        id: 'Profile', icon: <PeopleIcon />,\n        active: true,\n      },\n      { id: 'Logout', icon: <PublicIcon /> },\n    ],\n  },\n];\n\nconst item = {\n  py: '2px',\n  px: 3,\n  color: 'rgba(255, 255, 255, 0.7)',\n  '&:hover, &:focus': {\n    bgcolor: '#7E1E93ff',\n  },\n};\n\nconst itemCategory = {\n  boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\n  py: 1.5,\n  px: 3,\n}\n\nconst itemData = [\n  {\n    img: 'https://image.freepik.com/free-icon/wellness-logo_318-52473.jpg',\n    title: 'Wellness',\n  },\n];\nexport default function Navigator(props) {\n  const { ...other } = props;\n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n       \n      <Box>\n        <ImageList sx={{width: '25', heigh: '25'}} cols={1}>\n        {itemData.map((image, index) => (\n          <ImageListItem>\n             <img src={require('../assets/logo4.png').default} alt=\"Logo\" loading='lazy'/>\n          </ImageListItem>\n        ))}\n        </ImageList>\n      </Box>\n\n\n        <ListItem sx={{ ...item, ...itemCategory }}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>Home</ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <Box key={id} sx={{ bgcolor: ' #642073ff' }}>\n            <ListItem sx={{ py: 2, px: 3 }}>\n              <ListItemText sx={{ color: '#fff' }}>{id}</ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active }) => (\n              <ListItem disablePadding key={childId}>\n                <ListItemButton selected={active} sx={item}>\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText>{childId}</ListItemText>\n                </ListItemButton>\n              </ListItem>\n            ))}\n\n            <Divider sx={{ mt: 2 }} />\n          </Box>\n        ))}\n      </List>\n    </Drawer>\n  );\n}","C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\components\\Header.js",[],"C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\components\\Content.js",["33","34"],"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport axios from \"axios\"\n\n\nconst columns = [\n  { field: 'company', headerName: 'Company', width: 150 },\n  { field: 'boosters', headerName: 'Boosters', width: 150 },\n  { field: 'rocket_name', headerName: 'Rocket Name', width: 160, },\n  { field: 'first_flight', headerName: 'First Flight', width: 160, },\n  { field: 'country', headerName: 'Country', width: 160, },\n];\n\n\n\nexport default function DataTable() { \n  const [rows, setRows] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch('/drugs');\n        const data = await response.json();\n        setRows(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n    getData();\n  }, []);\n\n  return isLoading ? null : (\n    <div style={{ height: 430, width: '60%', }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={10}\n        rowsPerPageOptions={[10]}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n\n\nconst temp = [\n  { id: 1, noon: 'lexapro', am: 'Naloxen', pm:'Heloo', other: 'Hello World' },\n  { id: 2, noon: 'Fetanyl', am: 'Rybelsus', pm: 'Cymbalta', other: 'Hello World'},\n  { id: 3, noon: 'Oxycodon', am: 'Wegovy', pm:'Adderall', other: 'Hello World'},\n  { id: 4, noon: 'Vicodin', am: 'Xanax', pm: 'Viagra', other: 'Hello World'},\n  { id: 5, noon: 'Bunavail', am: 'Ativan', pm: 'Gilenya', other: 'Hello World'},\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n];","C:\\Users\\casti\\Desktop\\Operation-Wellness\\client\\src\\utils\\mutations.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":8,"nodeType":"41","messageId":"42","endLine":12,"endColumn":22},{"ruleId":"39","severity":1,"message":"43","line":13,"column":8,"nodeType":"41","messageId":"42","endLine":13,"endColumn":29},{"ruleId":"39","severity":1,"message":"44","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":13},{"ruleId":"39","severity":1,"message":"45","line":49,"column":7,"nodeType":"41","messageId":"42","endLine":49,"endColumn":11},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'DnsRoundedIcon' is defined but never used.","Identifier","unusedVar","'PermMediaOutlinedIcon' is defined but never used.","'axios' is defined but never used.","'temp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]