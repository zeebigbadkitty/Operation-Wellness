[{"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\App.js":"1","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Header.js":"2","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Navigator.js":"3","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Content.js":"4","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\index.js":"5"},{"size":4801,"mtime":1677721771465,"results":"6","hashOfConfig":"7"},{"size":5063,"mtime":1677807985619,"results":"8","hashOfConfig":"7"},{"size":3050,"mtime":1677814054841,"results":"9","hashOfConfig":"7"},{"size":1946,"mtime":1677977311503,"results":"10","hashOfConfig":"7"},{"size":197,"mtime":1677642803793,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ggayiq",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\App.js",[],["24","25"],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Header.js",[],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Navigator.js",["26","27"],"import * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport HomeIcon from '@mui/icons-material/Home';\nimport PeopleIcon from '@mui/icons-material/People';\nimport DnsRoundedIcon from '@mui/icons-material/DnsRounded';\nimport PermMediaOutlinedIcon from '@mui/icons-material/PhotoSizeSelectActual';\nimport PublicIcon from '@mui/icons-material/Public';\nimport { ImageList, ImageListItem } from '@mui/material';\n\n// import SettingsEthernetIcon from '@mui/icons-material/SettingsEthernet';\n// import SettingsInputComponentIcon from '@mui/icons-material/SettingsInputComponent';\n// import TimerIcon from '@mui/icons-material/Timer';\n// import SettingsIcon from '@mui/icons-material/Settings';\n// import PhonelinkSetupIcon from '@mui/icons-material/PhonelinkSetup';\n\nconst categories = [\n  {\n    id: 'TaskBar',\n    children: [\n      {\n        id: 'Profile', icon: <PeopleIcon />,\n        active: true,\n      },\n      { id: 'Logout', icon: <PublicIcon /> },\n    ],\n  },\n];\n\nconst item = {\n  py: '2px',\n  px: 3,\n  color: 'rgba(255, 255, 255, 0.7)',\n  '&:hover, &:focus': {\n    bgcolor: '#7E1E93ff',\n  },\n};\n\nconst itemCategory = {\n  boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\n  py: 1.5,\n  px: 3,\n}\n\nconst itemData = [\n  {\n    img: 'https://image.freepik.com/free-icon/wellness-logo_318-52473.jpg',\n    title: 'Wellness',\n  },\n];\nexport default function Navigator(props) {\n  const { ...other } = props;\n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n       \n      <Box>\n        <ImageList sx={{width: '25', heigh: '25'}} cols={1}>\n        {itemData.map((image, index) => (\n          <ImageListItem key={index}>\n            <img src={image.img} alt={image.title} loading='lazy'/>\n          </ImageListItem>\n        ))}\n        </ImageList>\n      </Box>\n\n\n        <ListItem sx={{ ...item, ...itemCategory }}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>Home</ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <Box key={id} sx={{ bgcolor: ' #642073ff' }}>\n            <ListItem sx={{ py: 2, px: 3 }}>\n              <ListItemText sx={{ color: '#fff' }}>{id}</ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active }) => (\n              <ListItem disablePadding key={childId}>\n                <ListItemButton selected={active} sx={item}>\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText>{childId}</ListItemText>\n                </ListItemButton>\n              </ListItem>\n            ))}\n\n            <Divider sx={{ mt: 2 }} />\n          </Box>\n        ))}\n      </List>\n    </Drawer>\n  );\n}","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Content.js",["28"],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\index.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":12,"column":8,"nodeType":"35","messageId":"36","endLine":12,"endColumn":22},{"ruleId":"33","severity":1,"message":"37","line":13,"column":8,"nodeType":"35","messageId":"36","endLine":13,"endColumn":29},{"ruleId":"33","severity":1,"message":"38","line":13,"column":7,"nodeType":"35","messageId":"36","endLine":13,"endColumn":11},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'DnsRoundedIcon' is defined but never used.","Identifier","unusedVar","'PermMediaOutlinedIcon' is defined but never used.","'temp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]