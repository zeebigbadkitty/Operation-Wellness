[{"C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\index.js":"1","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\App.js":"2","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Content.js":"3","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Navigator.js":"4","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Header.js":"5","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Login.js":"6","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Signup.js":"7","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\utils\\auth.js":"8","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\utils\\mutations.js":"9"},{"size":197,"mtime":1677553430241,"results":"10","hashOfConfig":"11"},{"size":7304,"mtime":1678154067043,"results":"12","hashOfConfig":"11"},{"size":2061,"mtime":1678148441162,"results":"13","hashOfConfig":"11"},{"size":3061,"mtime":1678148377345,"results":"14","hashOfConfig":"11"},{"size":5063,"mtime":1678148377343,"results":"15","hashOfConfig":"11"},{"size":2503,"mtime":1678148451926,"results":"16","hashOfConfig":"11"},{"size":2658,"mtime":1678148451928,"results":"17","hashOfConfig":"11"},{"size":1043,"mtime":1678148451929,"results":"18","hashOfConfig":"11"},{"size":1308,"mtime":1678148451931,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1car0ow",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\index.js",[],["43","44"],"C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\App.js",["45","46"],"import React, { useState } from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Navigator from './components/Navigator';\nimport Content from './components/Content';\nimport Header from './components/Header';\nimport { useMutation } from '@apollo/client';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\n\n// const { gql } = require(\"apollo-server-express\");\n\n// // import { useMutation } from \"@apollo/client\";\n// import { LOGIN_MUTATION, LOGOUT_MUTATION } from \"./utils/mutations\";\n\n// function LoginForm() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const [login, { data: loginData }] = useMutation(LOGIN_MUTATION);\n//   const [logout, { data: logoutData }] = useMutation(LOGOUT_MUTATION);\n\n//   const handleLogin = async () => {\n//     const { data } = await login({ variables: { email, password } });\n//     // handle login success and store token in local storage or cookie\n//   };\n\n//   const handleLogout = async () => {\n//     await logout();\n//     // handle logout success and remove token from local storage or cookie\n//   };\n\n//   return (\n//     <>\n//       <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//       <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n//       <button onClick={handleLogin}>Login</button>\n//       <button onClick={handleLogout}>Logout</button>\n//     </>\n//   );\n// }\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/zeebigbadkitty/Operation-Wellness\">\n        Operation Wellness - A Reactstreet Boys Application \n      </Link>{' '}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nlet theme = createTheme({\n  palette: {\n    primary: {\n      light: '#FFE2F2ff',\n      main: '#FFE2F2ff',\n      dark: '#7E1E93ff',\n    },\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5,\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  components: {\n    MuiTab: {\n      defaultProps: {\n        disableRipple: true,\n      },\n    },\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 48,\n    },\n  },\n});\n\ntheme = {\n  ...theme,\n  components: {\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          backgroundColor: '#642073ff',\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n        },\n        contained: {\n          boxShadow: 'none',\n          '&:active': {\n            boxShadow: 'none',\n          },\n        },\n      },\n    },\n    MuiTabs: {\n      styleOverrides: {\n        root: {\n          marginLeft: theme.spacing(1),\n        },\n        indicator: {\n          height: 3,\n          borderTopLeftRadius: 3,\n          borderTopRightRadius: 3,\n          backgroundColor: theme.palette.common.white,\n        },\n      },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          margin: '0 16px',\n          minWidth: 0,\n          padding: 0,\n          [theme.breakpoints.up('md')]: {\n            padding: 0,\n            minWidth: 0,\n          },\n        },\n      },\n    },\n    MuiIconButton: {\n      styleOverrides: {\n        root: {\n          padding: theme.spacing(1),\n        },\n      },\n    },\n    MuiTooltip: {\n      styleOverrides: {\n        tooltip: {\n          borderRadius: 4,\n        },\n      },\n    },\n    MuiDivider: {\n      styleOverrides: {\n        root: {\n          backgroundColor: 'rgb(255,255,255,0.15)',\n        },\n      },\n    },\n    MuiListItemButton: {\n      styleOverrides: {\n        root: {\n          '&.Mui-selected': {\n            color: '#FFE2F2ff',\n          },\n        },\n      },\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          fontSize: 14,\n          fontWeight: theme.typography.fontWeightMedium,\n        },\n      },\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          color: 'inherit',\n          minWidth: 'auto',\n          marginRight: theme.spacing(2),\n          '& svg': {\n            fontSize: 20,\n          },\n        },\n      },\n    },\n    MuiAvatar: {\n      styleOverrides: {\n        root: {\n          width: 32,\n          height: 32,\n        },\n      },\n    },\n  },\n};\n\nconst drawerWidth = 256;\n\nexport default function Paperbase() {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const isSmUp = useMediaQuery(theme.breakpoints.up('sm'));\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    \n    <ApolloProvider client={client}>\n      <Router>\n    <ThemeProvider theme={theme}>\n      <Box sx={{ display: 'flex', minHeight: '100vh' }}>\n        <CssBaseline />\n        <Box\n          component=\"nav\"\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n        >\n          {isSmUp ? null : (\n            <Navigator\n              sx={{backgroundColor: '#642073ff',}}\n              PaperProps={{ style: { width: drawerWidth } }}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n            />\n          )}\n\n          <Navigator \n            PaperProps={{ style: { width: drawerWidth } }}\n            sx={{ display: { sm: 'block', xs: 'none' },  }}\n          />\n        </Box>\n        <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n          <Header onDrawerToggle={handleDrawerToggle} />\n          <Box component=\"main\" sx={{ flex: 1, py: 6, px: 4, bgcolor: '#F9E9FAff' }}>\n            <Routes>\n              <Route path=\"/\" element={<Content />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n            </Routes>\n          </Box>\n          <Box component=\"footer\" sx={{ p: 2, bgcolor: '#FFE2F2ff',}}> \n            <Copyright />\n          </Box>\n        </Box>\n      </Box>\n    </ThemeProvider>\n    </Router>\n    </ApolloProvider>\n  );\n}","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Content.js",["47","48"],"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport axios from \"axios\"\n\n\nconst columns = [\n  { field: 'company', headerName: 'Company', width: 150 },\n  { field: 'boosters', headerName: 'Boosters', width: 150 },\n  { field: 'rocket_name', headerName: 'Rocket Name', width: 160, },\n  { field: 'first_flight', headerName: 'First Flight', width: 160, },\n  { field: 'country', headerName: 'Country', width: 160, },\n];\n\n\n\nexport default function DataTable() { \n  const [rows, setRows] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n\n        const response = await fetch('/drugs');\n        const data = await response.json();\n        setRows(data);\n        setIsLoading(false);\n        \n        \n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n    getData();\n  }, []);\n\n  return isLoading ? null : (\n    <div style={{ height: 430, width: '60%', }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={10}\n        rowsPerPageOptions={[10]}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n\n\nconst temp = [\n  { id: 1, noon: 'lexapro', am: 'Naloxen', pm:'Heloo', other: 'Hello World' },\n  { id: 2, noon: 'Fetanyl', am: 'Rybelsus', pm: 'Cymbalta', other: 'Hello World'},\n  { id: 3, noon: 'Oxycodon', am: 'Wegovy', pm:'Adderall', other: 'Hello World'},\n  { id: 4, noon: 'Vicodin', am: 'Xanax', pm: 'Viagra', other: 'Hello World'},\n  { id: 5, noon: 'Bunavail', am: 'Ativan', pm: 'Gilenya', other: 'Hello World'},\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n  { id: 6, noon: 'Nurtec', am: 'Acetominophen', pm: 'Brilinta', other: 'Hello World' },\n];","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Navigator.js",["49","50"],"import * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport HomeIcon from '@mui/icons-material/Home';\nimport PeopleIcon from '@mui/icons-material/People';\nimport DnsRoundedIcon from '@mui/icons-material/DnsRounded';\nimport PermMediaOutlinedIcon from '@mui/icons-material/PhotoSizeSelectActual';\nimport PublicIcon from '@mui/icons-material/Public';\nimport { ImageList, ImageListItem } from '@mui/material';\n\n// import SettingsEthernetIcon from '@mui/icons-material/SettingsEthernet';\n// import SettingsInputComponentIcon from '@mui/icons-material/SettingsInputComponent';\n// import TimerIcon from '@mui/icons-material/Timer';\n// import SettingsIcon from '@mui/icons-material/Settings';\n// import PhonelinkSetupIcon from '@mui/icons-material/PhonelinkSetup';\n\nconst categories = [\n  {\n    id: 'TaskBar',\n    children: [\n      {\n        id: 'Profile', icon: <PeopleIcon />,\n        active: true,\n      },\n      { id: 'Logout', icon: <PublicIcon /> },\n    ],\n  },\n];\n\nconst item = {\n  py: '2px',\n  px: 3,\n  color: 'rgba(255, 255, 255, 0.7)',\n  '&:hover, &:focus': {\n    bgcolor: '#7E1E93ff',\n  },\n};\n\nconst itemCategory = {\n  boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\n  py: 1.5,\n  px: 3,\n}\n\nconst itemData = [\n  {\n    img: 'https://image.freepik.com/free-icon/wellness-logo_318-52473.jpg',\n    title: 'Wellness',\n  },\n];\nexport default function Navigator(props) {\n  const { ...other } = props;\n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n       \n      <Box>\n        <ImageList sx={{width: '25', heigh: '25'}} cols={1}>\n        {itemData.map((image, index) => (\n          <ImageListItem>\n             <img src={require('../assets/logo4.png').default} alt=\"Logo\" loading='lazy'/>\n          </ImageListItem>\n        ))}\n        </ImageList>\n      </Box>\n\n\n        <ListItem sx={{ ...item, ...itemCategory }}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>Home</ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <Box key={id} sx={{ bgcolor: ' #642073ff' }}>\n            <ListItem sx={{ py: 2, px: 3 }}>\n              <ListItemText sx={{ color: '#fff' }}>{id}</ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active }) => (\n              <ListItem disablePadding key={childId}>\n                <ListItemButton selected={active} sx={item}>\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText>{childId}</ListItemText>\n                </ListItemButton>\n              </ListItem>\n            ))}\n\n            <Divider sx={{ mt: 2 }} />\n          </Box>\n        ))}\n      </List>\n    </Drawer>\n  );\n}","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Header.js",[],"C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Login.js",[],"C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\components\\Signup.js",[],"C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\utils\\auth.js",["51"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\zeebi\\bootcamp\\Operation-Wellness\\client\\src\\utils\\mutations.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":11,"column":10,"nodeType":"58","messageId":"59","endLine":11,"endColumn":21},{"ruleId":"56","severity":1,"message":"61","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":13},{"ruleId":"56","severity":1,"message":"62","line":52,"column":7,"nodeType":"58","messageId":"59","endLine":52,"endColumn":11},{"ruleId":"56","severity":1,"message":"63","line":12,"column":8,"nodeType":"58","messageId":"59","endLine":12,"endColumn":22},{"ruleId":"56","severity":1,"message":"64","line":13,"column":8,"nodeType":"58","messageId":"59","endLine":13,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":41,"column":1,"nodeType":"67","endLine":41,"endColumn":34},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'axios' is defined but never used.","'temp' is assigned a value but never used.","'DnsRoundedIcon' is defined but never used.","'PermMediaOutlinedIcon' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]