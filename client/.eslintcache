[{"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\index.js":"1","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\App.js":"2","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Header.js":"3","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Navigator.js":"4","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Content.js":"5","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Login.js":"6","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Signup.js":"7","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\queries.js":"8","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\auth.js":"9","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\mutations.js":"10"},{"size":197,"mtime":1678156555758,"results":"11","hashOfConfig":"12"},{"size":6169,"mtime":1678238536386,"results":"13","hashOfConfig":"12"},{"size":5063,"mtime":1678156555756,"results":"14","hashOfConfig":"12"},{"size":3210,"mtime":1678237958322,"results":"15","hashOfConfig":"12"},{"size":1697,"mtime":1678236793284,"results":"16","hashOfConfig":"12"},{"size":2534,"mtime":1678236852562,"results":"17","hashOfConfig":"12"},{"size":2648,"mtime":1678236852562,"results":"18","hashOfConfig":"12"},{"size":642,"mtime":1678236852563,"results":"19","hashOfConfig":"12"},{"size":1043,"mtime":1678156885363,"results":"20","hashOfConfig":"12"},{"size":1335,"mtime":1678236852563,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ggayiq",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\index.js",[],["47","48"],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\App.js",["49","50"],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Header.js",[],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Navigator.js",["51","52","53","54"],"import * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport HomeIcon from '@mui/icons-material/Home';\nimport PeopleIcon from '@mui/icons-material/People';\nimport DnsRoundedIcon from '@mui/icons-material/DnsRounded';\nimport PermMediaOutlinedIcon from '@mui/icons-material/PhotoSizeSelectActual';\nimport PublicIcon from '@mui/icons-material/Public';\nimport { ImageList, ImageListItem } from '@mui/material';\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\n// import SettingsEthernetIcon from '@mui/icons-material/SettingsEthernet';\n// import SettingsInputComponentIcon from '@mui/icons-material/SettingsInputComponent';\n// import TimerIcon from '@mui/icons-material/Timer';\n// import SettingsIcon from '@mui/icons-material/Settings';\n// import PhonelinkSetupIcon from '@mui/icons-material/PhonelinkSetup';\n\nconst categories = [\n  {\n    id: 'TaskBar',\n    children: [\n      {\n        id: 'Profile', icon: <PeopleIcon />,\n        active: true,\n      },\n      { id: 'Logout', icon: <LogoutIcon /> },\n    ],\n  },\n];\n\nconst item = {\n  py: '10px',\n  px: 3,\n  color: 'rgba(255, 255, 255, 0.7)',\n  '&:hover, &:focus': {\n    bgcolor: '#7E1E93ff',\n  },\n};\n\nconst itemCategory = {\n  boxShadow: '0 -1px 0 rgb(255,255,255,0.1) inset',\n  py: 1.5,\n  px: 3,\n}\n\nconst itemData = [\n  {\n    img: 'https://image.freepik.com/free-icon/wellness-logo_318-52473.jpg',\n    title: 'Wellness',\n  },\n];\nexport default function Navigator(props) {\n  const { ...other } = props;\n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n       \n      <Box>\n        <ImageList sx={{width: '25', heigh: '25'}} cols={1}>\n        {itemData.map((image, index) => (\n          <ImageListItem>\n             <img src={require('../assets/logo4.png').default} alt=\"Logo\" loading='lazy'/>\n          </ImageListItem>\n        ))}\n        </ImageList>\n      </Box>\n\n\n        <ListItem sx={{ ...item, ...itemCategory }}>\n          <ListItemIcon>\n            <MedicationLiquidIcon />\n          </ListItemIcon>\n          <ListItemText>Add Medication</ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <Box key={id} sx={{ bgcolor: ' #642073ff' }}>\n            <ListItem sx={{ py: 2, px: 3 }}>\n              <ListItemText sx={{ color: '#fff' }}>{id}</ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active }) => (\n              <ListItem disablePadding key={childId}>\n                <ListItemButton selected={active} sx={item}>\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText>{childId}</ListItemText>\n                </ListItemButton>\n              </ListItem>\n            ))}\n\n            <Divider sx={{ mt: 4 }} />\n          </Box>\n        ))}\n      </List>\n    </Drawer>\n  );\n}","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Content.js",["55","56","57","58","59","60","61","62"],"import * as React from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport axios from \"axios\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER_DRUGS, QUERY_SINGLE_DRUG } from \"../utils/queries\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\n//use query hook from Apollo to get data from the server\n\nconst columns = [\n  { field: \"proprietaryname\", headerName: \"Drug Name\", width: 150 },\n  { field: \"active_numerator_strength\", headerName: \"Strength\", width: 150 },\n  { field: \"active_ingred_unit\", headerName: \"Strength Unit\", width: 160 },\n];\n\nexport default function DataTable() {\n  const [rows, setRows] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [csv, setCsv] = React.useState({});\n\n  const { loading, data } = useQuery(QUERY_USER_DRUGS);\n  const userDrugs = data?.userDrugs || [];\n  console.log(userDrugs);\n\n  function handleDownloadCsv() {\n    const csvData = userDrugs.map((row) => ({\n      proprietaryname: row.proprietaryname,\n      active_numerator_strength: row.active_numerator_strength,\n      active_ingred_unit: row.active_ingred_unit,\n    }));\n    setCsv({\n      data: csvData,\n      fields: columns,\n    });\n  }\n  return (\n    <>\n    {loading ? (\n      <h1>Loading...</h1>\n    ) : (\n      <div style={{ height: 430, width: \"60%\" }}>\n        <DataGrid\n          columns={columns}\n          rows={userDrugs}\n          slots={{\n            toolbar: () => (\n              <GridToolbar>\n                <CSVLink {...csv} filename={\"data.csv\"}>\n                  Download me\n                </CSVLink>\n              </GridToolbar>\n            ),\n          }}\n        />\n      </div>\n    )}\n  </>\n);\n}\n","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Login.js",["63","64"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER, LOGIN_MUTATION, LOGOUT_MUTATION} from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\components\\Signup.js",[],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\queries.js",[],"C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\auth.js",["65"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\janvi\\operation-wellness\\Operation-Wellness\\client\\src\\utils\\mutations.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":11,"column":10,"nodeType":"72","messageId":"73","endLine":11,"endColumn":21},{"ruleId":"70","severity":1,"message":"75","line":10,"column":8,"nodeType":"72","messageId":"73","endLine":10,"endColumn":16},{"ruleId":"70","severity":1,"message":"76","line":12,"column":8,"nodeType":"72","messageId":"73","endLine":12,"endColumn":22},{"ruleId":"70","severity":1,"message":"77","line":13,"column":8,"nodeType":"72","messageId":"73","endLine":13,"endColumn":29},{"ruleId":"70","severity":1,"message":"78","line":14,"column":8,"nodeType":"72","messageId":"73","endLine":14,"endColumn":18},{"ruleId":"70","severity":1,"message":"79","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":13},{"ruleId":"70","severity":1,"message":"80","line":5,"column":28,"nodeType":"72","messageId":"73","endLine":5,"endColumn":45},{"ruleId":"70","severity":1,"message":"81","line":6,"column":19,"nodeType":"72","messageId":"73","endLine":6,"endColumn":30},{"ruleId":"70","severity":1,"message":"82","line":17,"column":10,"nodeType":"72","messageId":"73","endLine":17,"endColumn":14},{"ruleId":"70","severity":1,"message":"83","line":17,"column":16,"nodeType":"72","messageId":"73","endLine":17,"endColumn":23},{"ruleId":"70","severity":1,"message":"84","line":18,"column":10,"nodeType":"72","messageId":"73","endLine":18,"endColumn":19},{"ruleId":"70","severity":1,"message":"85","line":18,"column":21,"nodeType":"72","messageId":"73","endLine":18,"endColumn":33},{"ruleId":"70","severity":1,"message":"86","line":25,"column":12,"nodeType":"72","messageId":"73","endLine":25,"endColumn":29},{"ruleId":"70","severity":1,"message":"87","line":4,"column":22,"nodeType":"72","messageId":"73","endLine":4,"endColumn":36},{"ruleId":"70","severity":1,"message":"88","line":4,"column":38,"nodeType":"72","messageId":"73","endLine":4,"endColumn":53},{"ruleId":"89","severity":1,"message":"90","line":41,"column":1,"nodeType":"91","endLine":41,"endColumn":34},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'HomeIcon' is defined but never used.","'DnsRoundedIcon' is defined but never used.","'PermMediaOutlinedIcon' is defined but never used.","'PublicIcon' is defined but never used.","'axios' is defined but never used.","'QUERY_SINGLE_DRUG' is defined but never used.","'CSVDownload' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'handleDownloadCsv' is defined but never used.","'LOGIN_MUTATION' is defined but never used.","'LOGOUT_MUTATION' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]